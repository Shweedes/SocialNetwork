{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nlet FOLLOW = 'FOLLOW';\nlet UNFOLLOW = 'UNFOLLOW';\nlet SET_USERS = 'SET_USERS';\nlet SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nlet SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nlet TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nlet TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  usersData: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsers = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setUsersTotalCount(data.totalCount));\n    });\n  };\n};\nexport const follow = userId => {\n  return dispatch => {\n    dispatch(toggleFollowingProgress(true, userId));\n    usersAPI.follow(userId).then(response => {\n      if (response.data.resultCode == 0) {\n        dispatch(followSuccess(userId));\n      }\n      dispatch(toggleFollowingProgress(false, userId));\n    });\n  };\n};\nexport const unfollow = userId => {\n  return dispatch => {\n    dispatch(toggleFollowingProgress(true, userId));\n    usersAPI.unfollow(userId).then(response => {\n      if (response.data.resultCode == 0) {\n        dispatch(unfollowSuccess(userId));\n      }\n      dispatch(toggleFollowingProgress(false, userId));\n    });\n  };\n};\n\n/*export const usersThunkCreator = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        // Уведомляем о начале загрузки\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        // Получаем пользователей\r\n        usersAPI.getUsers(currentPage, pageSize).then((data) => {\r\n            // Уведомляем о завершении загрузки\r\n            dispatch(toggleIsFetching(false));\r\n            // Обновляем состояние пользователей и общего количества пользователей\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n        });\r\n    };\r\n};*/\n\nconst usersPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        usersData: state.usersData.map(user => {\n          if (user.id === action.userId) {\n            return {\n              ...user,\n              followed: true\n            };\n          }\n          return user;\n        })\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        usersData: state.usersData.map(user => {\n          if (user.id === action.userId) {\n            return {\n              ...user,\n              followed: false\n            };\n          }\n          return user;\n        })\n      };\n    case SET_USERS:\n      return {\n        ...state,\n        usersData: action.users\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      };\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.count\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      };\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n    default:\n      return state;\n  }\n};\nexport default usersPageReducer;","map":{"version":3,"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","usersData","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","type","unfollowSuccess","setUsers","users","setCurrentPage","setUsersTotalCount","count","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","then","data","items","totalCount","follow","response","resultCode","unfollow","usersPageReducer","state","action","map","user","id","followed","filter"],"sources":["D:/01-first-project/src/redux/usersPageReducer.js"],"sourcesContent":["import {usersAPI} from \"../api/api\";\r\n\r\nlet FOLLOW = 'FOLLOW'\r\nlet UNFOLLOW = 'UNFOLLOW'\r\nlet SET_USERS = 'SET_USERS'\r\nlet SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nlet SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nlet TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nlet TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    usersData: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then((data) => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId).then((response) => {\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId).then((response) => {\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        });\r\n    }\r\n}\r\n\r\n/*export const usersThunkCreator = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        // Уведомляем о начале загрузки\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        // Получаем пользователей\r\n        usersAPI.getUsers(currentPage, pageSize).then((data) => {\r\n            // Уведомляем о завершении загрузки\r\n            dispatch(toggleIsFetching(false));\r\n            // Обновляем состояние пользователей и общего количества пользователей\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n        });\r\n    };\r\n};*/\r\n\r\nconst usersPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, usersData: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersPageReducer;"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,YAAY;AAEnC,IAAIC,MAAM,GAAG,QAAQ;AACrB,IAAIC,QAAQ,GAAG,UAAU;AACzB,IAAIC,SAAS,GAAG,WAAW;AAC3B,IAAIC,gBAAgB,GAAG,kBAAkB;AACzC,IAAIC,qBAAqB,GAAG,uBAAuB;AACnD,IAAIC,kBAAkB,GAAG,oBAAoB;AAC7C,IAAIC,4BAA4B,GAAG,8BAA8B;AAEjE,IAAIC,YAAY,GAAG;EACfC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,CAAC;EACXC,eAAe,EAAE,CAAC;EAClBC,WAAW,EAAE,CAAC;EACdC,UAAU,EAAE,IAAI;EAChBC,mBAAmB,EAAE;AACzB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIC,MAAM,KAAM;EAACC,IAAI,EAAEhB,MAAM;EAAEe;AAAM,CAAC,CAAC;AACjE,OAAO,MAAME,eAAe,GAAIF,MAAM,KAAM;EAACC,IAAI,EAAEf,QAAQ;EAAEc;AAAM,CAAC,CAAC;AACrE,OAAO,MAAMG,QAAQ,GAAIC,KAAK,KAAM;EAACH,IAAI,EAAEd,SAAS;EAAEiB;AAAK,CAAC,CAAC;AAC7D,OAAO,MAAMC,cAAc,GAAIT,WAAW,KAAM;EAACK,IAAI,EAAEb,gBAAgB;EAAEQ;AAAW,CAAC,CAAC;AACtF,OAAO,MAAMU,kBAAkB,GAAIX,eAAe,KAAM;EAACM,IAAI,EAAEZ,qBAAqB;EAAEkB,KAAK,EAAEZ;AAAe,CAAC,CAAC;AAC9G,OAAO,MAAMa,gBAAgB,GAAIX,UAAU,KAAM;EAACI,IAAI,EAAEX,kBAAkB;EAAEO;AAAU,CAAC,CAAC;AACxF,OAAO,MAAMY,uBAAuB,GAAGA,CAACZ,UAAU,EAAEG,MAAM,MAAM;EAC5DC,IAAI,EAAEV,4BAA4B;EAClCM,UAAU;EACVG;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMU,QAAQ,GAAGA,CAACd,WAAW,EAAEF,QAAQ,KAAK;EAC/C,OAAQiB,QAAQ,IAAK;IACjBA,QAAQ,CAACH,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAEhCxB,QAAQ,CAAC0B,QAAQ,CAACd,WAAW,EAAEF,QAAQ,CAAC,CAACkB,IAAI,CAAEC,IAAI,IAAK;MACpDF,QAAQ,CAACH,gBAAgB,CAAC,KAAK,CAAC,CAAC;MACjCG,QAAQ,CAACR,QAAQ,CAACU,IAAI,CAACC,KAAK,CAAC,CAAC;MAC9BH,QAAQ,CAACL,kBAAkB,CAACO,IAAI,CAACE,UAAU,CAAC,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,MAAM,GAAIhB,MAAM,IAAK;EAC9B,OAAQW,QAAQ,IAAK;IACjBA,QAAQ,CAACF,uBAAuB,CAAC,IAAI,EAAET,MAAM,CAAC,CAAC;IAC/ChB,QAAQ,CAACgC,MAAM,CAAChB,MAAM,CAAC,CAACY,IAAI,CAAEK,QAAQ,IAAK;MACvC,IAAIA,QAAQ,CAACJ,IAAI,CAACK,UAAU,IAAI,CAAC,EAAE;QAC/BP,QAAQ,CAACZ,aAAa,CAACC,MAAM,CAAC,CAAC;MACnC;MACAW,QAAQ,CAACF,uBAAuB,CAAC,KAAK,EAAET,MAAM,CAAC,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAMmB,QAAQ,GAAInB,MAAM,IAAK;EAChC,OAAQW,QAAQ,IAAK;IACjBA,QAAQ,CAACF,uBAAuB,CAAC,IAAI,EAAET,MAAM,CAAC,CAAC;IAC/ChB,QAAQ,CAACmC,QAAQ,CAACnB,MAAM,CAAC,CAACY,IAAI,CAAEK,QAAQ,IAAK;MACzC,IAAIA,QAAQ,CAACJ,IAAI,CAACK,UAAU,IAAI,CAAC,EAAE;QAC/BP,QAAQ,CAACT,eAAe,CAACF,MAAM,CAAC,CAAC;MACrC;MACAW,QAAQ,CAACF,uBAAuB,CAAC,KAAK,EAAET,MAAM,CAAC,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMoB,gBAAgB,GAAGA,CAACC,KAAK,GAAG7B,YAAY,EAAE8B,MAAM,KAAK;EACvD,QAAQA,MAAM,CAACrB,IAAI;IACf,KAAKhB,MAAM;MACP,OAAO;QACH,GAAGoC,KAAK;QACR5B,SAAS,EAAE4B,KAAK,CAAC5B,SAAS,CAAC8B,GAAG,CAACC,IAAI,IAAI;UACnC,IAAIA,IAAI,CAACC,EAAE,KAAKH,MAAM,CAACtB,MAAM,EAAE;YAC3B,OAAO;cAAC,GAAGwB,IAAI;cAAEE,QAAQ,EAAE;YAAI,CAAC;UACpC;UACA,OAAOF,IAAI;QACf,CAAC;MACL,CAAC;IACL,KAAKtC,QAAQ;MACT,OAAO;QACH,GAAGmC,KAAK;QACR5B,SAAS,EAAE4B,KAAK,CAAC5B,SAAS,CAAC8B,GAAG,CAACC,IAAI,IAAI;UACnC,IAAIA,IAAI,CAACC,EAAE,KAAKH,MAAM,CAACtB,MAAM,EAAE;YAC3B,OAAO;cAAC,GAAGwB,IAAI;cAAEE,QAAQ,EAAE;YAAK,CAAC;UACrC;UACA,OAAOF,IAAI;QACf,CAAC;MACL,CAAC;IACL,KAAKrC,SAAS;MACV,OAAO;QACH,GAAGkC,KAAK;QAAE5B,SAAS,EAAE6B,MAAM,CAAClB;MAChC,CAAC;IACL,KAAKhB,gBAAgB;MACjB,OAAO;QACH,GAAGiC,KAAK;QAAEzB,WAAW,EAAE0B,MAAM,CAAC1B;MAClC,CAAC;IACL,KAAKP,qBAAqB;MACtB,OAAO;QACH,GAAGgC,KAAK;QAAE1B,eAAe,EAAE2B,MAAM,CAACf;MACtC,CAAC;IACL,KAAKjB,kBAAkB;MACnB,OAAO;QACH,GAAG+B,KAAK;QAAExB,UAAU,EAAEyB,MAAM,CAACzB;MACjC,CAAC;IACL,KAAKN,4BAA4B;MAC7B,OAAO;QACH,GAAG8B,KAAK;QACRvB,mBAAmB,EAAEwB,MAAM,CAACzB,UAAU,GAClC,CAAC,GAAGwB,KAAK,CAACvB,mBAAmB,EAAEwB,MAAM,CAACtB,MAAM,CAAC,GAC3CqB,KAAK,CAACvB,mBAAmB,CAAC6B,MAAM,CAACF,EAAE,IAAIA,EAAE,IAAIH,MAAM,CAACtB,MAAM;MACpE,CAAC;IACL;MACI,OAAOqB,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}