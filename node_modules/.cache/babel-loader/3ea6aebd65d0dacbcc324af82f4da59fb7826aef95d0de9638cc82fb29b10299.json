{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nlet ADD_POST = 'ADD-POST';\nlet UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nlet SET_USER_PROFILE = 'SET_USER_PROFILE';\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = newName => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: newName\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const viewCurrentProfile = currentUserId => {\n  return dispatch => {\n    usersAPI.getCurrentProfile(currentUserId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nlet initialState = {\n  postsData: [{\n    message: \"Hi, how are you?\",\n    likeCounter: 5\n  }, {\n    message: \"It looks like you?\",\n    likeCounter: 14\n  }],\n  newPostText: 'google',\n  profile: null\n};\nconst profilePageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      const newPost = {\n        message: state.newPostText,\n        likeCounter: 0\n      };\n      return {\n        ...state,\n        postsData: [...state.postsData, newPost],\n        newPostText: ''\n      };\n    case UPDATE_NEW_POST_TEXT:\n      return {\n        ...state,\n        newPostText: action.newText\n      };\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile\n      };\n    default:\n      return state;\n  }\n};\nexport default profilePageReducer;","map":{"version":3,"names":["usersAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","addPostActionCreator","type","updateNewPostTextActionCreator","newName","newText","setUserProfile","profile","viewCurrentProfile","currentUserId","dispatch","getCurrentProfile","then","data","initialState","postsData","message","likeCounter","newPostText","profilePageReducer","state","action","newPost"],"sources":["D:/01-first-project/src/redux/profilePageReducer.js"],"sourcesContent":["import {usersAPI} from \"../api/api\";\r\n\r\nlet ADD_POST = 'ADD-POST'\r\nlet UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nlet SET_USER_PROFILE = 'SET_USER_PROFILE'\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const updateNewPostTextActionCreator = (newName) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: newName,\r\n});\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const viewCurrentProfile = (currentUserId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getCurrentProfile(currentUserId).then(data => {\r\n            dispatch(setUserProfile(data));\r\n        });\r\n    }\r\n}\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {message: \"Hi, how are you?\", likeCounter: 5},\r\n        {message: \"It looks like you?\", likeCounter: 14}\r\n    ],\r\n    newPostText: 'google',\r\n    profile: null\r\n}\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                message: state.newPostText,\r\n                likeCounter: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            };\r\n\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,YAAY;AAEnC,IAAIC,QAAQ,GAAG,UAAU;AACzB,IAAIC,oBAAoB,GAAG,sBAAsB;AACjD,IAAIC,gBAAgB,GAAG,kBAAkB;AAEzC,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,MAAO;EAACC,IAAI,EAAEJ;AAAQ,CAAC,CAAC;AAC5D,OAAO,MAAMK,8BAA8B,GAAIC,OAAO,KAAM;EACxDF,IAAI,EAAEH,oBAAoB;EAC1BM,OAAO,EAAED;AACb,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAIC,OAAO,KAAM;EAACL,IAAI,EAAEF,gBAAgB;EAAEO;AAAO,CAAC,CAAC;AAE9E,OAAO,MAAMC,kBAAkB,GAAIC,aAAa,IAAK;EACjD,OAAQC,QAAQ,IAAK;IACjBb,QAAQ,CAACc,iBAAiB,CAACF,aAAa,CAAC,CAACG,IAAI,CAACC,IAAI,IAAI;MACnDH,QAAQ,CAACJ,cAAc,CAACO,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,IAAIC,YAAY,GAAG;EACfC,SAAS,EAAE,CACP;IAACC,OAAO,EAAE,kBAAkB;IAAEC,WAAW,EAAE;EAAC,CAAC,EAC7C;IAACD,OAAO,EAAE,oBAAoB;IAAEC,WAAW,EAAE;EAAE,CAAC,CACnD;EACDC,WAAW,EAAE,QAAQ;EACrBX,OAAO,EAAE;AACb,CAAC;AAED,MAAMY,kBAAkB,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EACzD,QAAQA,MAAM,CAACnB,IAAI;IACf,KAAKJ,QAAQ;MACT,MAAMwB,OAAO,GAAG;QACZN,OAAO,EAAEI,KAAK,CAACF,WAAW;QAC1BD,WAAW,EAAE;MACjB,CAAC;MACD,OAAO;QACH,GAAGG,KAAK;QACRL,SAAS,EAAE,CAAC,GAAGK,KAAK,CAACL,SAAS,EAAEO,OAAO,CAAC;QACxCJ,WAAW,EAAE;MACjB,CAAC;IAEL,KAAKnB,oBAAoB;MACrB,OAAO;QACH,GAAGqB,KAAK;QACRF,WAAW,EAAEG,MAAM,CAAChB;MACxB,CAAC;IACL,KAAKL,gBAAgB;MACjB,OAAO;QACH,GAAGoB,KAAK;QAAEb,OAAO,EAAEc,MAAM,CAACd;MAC9B,CAAC;IACL;MACI,OAAOa,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}