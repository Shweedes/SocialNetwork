{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nlet FOLLOW = 'FOLLOW';\nlet UNFOLLOW = 'UNFOLLOW';\nlet SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setAuthUserData = (userId, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login\n  }\n});\nexport const getAuthData = () => {\n  return dispatch => {\n    usersAPI.getAuthData().then(response => {\n      if (response.data.resultCode === 0) {\n        let {\n          userId,\n          email,\n          login\n        } = response.data.data;\n        dispatch(setAuthUserData(userId, email, login));\n      }\n    });\n  };\n};\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.data,\n        isAuth: true\n      };\n    default:\n      return state;\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USER_DATA","initialState","userId","email","login","isAuth","follow","type","unfollow","setAuthUserData","data","getAuthData","dispatch","then","response","resultCode","authReducer","state","action"],"sources":["D:/01-first-project/src/redux/authReducer.js"],"sourcesContent":["import {usersAPI} from \"../api/api\";\r\n\r\nlet FOLLOW = 'FOLLOW'\r\nlet UNFOLLOW = 'UNFOLLOW'\r\nlet SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}})\r\n\r\nexport const getAuthData = () => {\r\n    return (dispatch) => {\r\n        usersAPI.getAuthData().then((response) => {\r\n            if(response.data.resultCode === 0) {\r\n                let {userId, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(userId, email, login))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state, ...action.data, isAuth: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,YAAY;AAEnC,IAAIC,MAAM,GAAG,QAAQ;AACrB,IAAIC,QAAQ,GAAG,UAAU;AACzB,IAAIC,aAAa,GAAG,eAAe;AAEnC,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,MAAM,GAAIJ,MAAM,KAAM;EAACK,IAAI,EAAET,MAAM;EAAEI;AAAM,CAAC,CAAC;AAC1D,OAAO,MAAMM,QAAQ,GAAIN,MAAM,KAAM;EAACK,IAAI,EAAER,QAAQ;EAAEG;AAAM,CAAC,CAAC;AAC9D,OAAO,MAAMO,eAAe,GAAGA,CAACP,MAAM,EAAEC,KAAK,EAAEC,KAAK,MAAM;EAACG,IAAI,EAAEP,aAAa;EAAEU,IAAI,EAAE;IAACR,MAAM;IAAEC,KAAK;IAAEC;EAAK;AAAC,CAAC,CAAC;AAE9G,OAAO,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAC7B,OAAQC,QAAQ,IAAK;IACjBf,QAAQ,CAACc,WAAW,CAAC,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MACtC,IAAGA,QAAQ,CAACJ,IAAI,CAACK,UAAU,KAAK,CAAC,EAAE;QAC/B,IAAI;UAACb,MAAM;UAAEC,KAAK;UAAEC;QAAK,CAAC,GAAGU,QAAQ,CAACJ,IAAI,CAACA,IAAI;QAC/CE,QAAQ,CAACH,eAAe,CAACP,MAAM,EAAEC,KAAK,EAAEC,KAAK,CAAC,CAAC;MACnD;IACJ,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,MAAMY,WAAW,GAAGA,CAACC,KAAK,GAAGhB,YAAY,EAAEiB,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACX,IAAI;IACf,KAAKP,aAAa;MACd,OAAO;QACH,GAAGiB,KAAK;QAAE,GAAGC,MAAM,CAACR,IAAI;QAAEL,MAAM,EAAE;MACtC,CAAC;IACL;MACI,OAAOY,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}